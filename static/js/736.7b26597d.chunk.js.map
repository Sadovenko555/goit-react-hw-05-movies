{"version":3,"file":"static/js/736.7b26597d.chunk.js","mappings":"qQAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAI1BC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wHAQpBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mZ,SCT3BK,EAAW,IAAIC,EAAAA,EAmCrB,EAjCa,WACT,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAepB,OAbAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOrB,EAASsB,SAASpB,GAAS,KAAD,EAAvCe,EAAIE,EAAAI,KACVd,EAAQQ,EAAKT,MAAMW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,QAAQC,IAAI,0BAAyBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAErD,kBAPgB,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KASjBlB,GACJ,GAAG,CAACT,KAGA4B,EAAAA,EAAAA,MAACtC,EAAa,CAAAuC,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACpC,EAAQ,CAAAmC,SACJvB,EAAKyB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAC1CR,EAAAA,EAAAA,MAAChC,EAAQ,CAAAiC,SAAA,EACLC,EAAAA,EAAAA,KAAA,OAAKO,IAAG,mCAAAC,OAAqCJ,GAAgBK,IAAKJ,KAClEL,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,KACJP,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYO,OAHJH,EAIJ,QAK/B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding: 2rem;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1rem;\n`;\n\nexport const CastItem = styled.li`\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 1rem;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  max-width: 250px;\n\n  img {\n    width: 100px;\n    height: 150px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    margin: 0;\n  }\n`;\n","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport MovieAPI from \"services/fetchAPI\";\nimport { CastContainer, CastList, CastItem } from './Cast.styled';\n\nconst movieAPI = new MovieAPI()\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        const getCastById = async () => {\n            try {\n                const resp = await movieAPI.CastById(movieId);\n                setCast(resp.cast);\n            } catch (error) {\n                console.log(\"Error searching movies:\", error);\n            }\n        };\n\n        getCastById();\n    }, [movieId]);\n\n    return (\n        <CastContainer>\n            <h2>Cast:</h2>\n            <CastList>\n                {cast.map(({ id, profile_path, name, character }) => (\n                    <CastItem key={id}>\n                        <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </CastItem>\n                ))}\n            </CastList>\n        </CastContainer>\n    );\n}\n\nexport default Cast;\n"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","movieAPI","MovieAPI","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCastById","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","CastById","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","map","_ref2","id","profile_path","name","character","src","concat","alt"],"sourceRoot":""}