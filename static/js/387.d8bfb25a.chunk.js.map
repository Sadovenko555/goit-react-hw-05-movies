{"version":3,"file":"static/js/387.d8bfb25a.chunk.js","mappings":"wPAEaA,E,OAAmBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iT,SCGpCC,EAAW,IAAIC,EAAAA,EAqCrB,EAnCgB,WACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAmB1B,OAjBAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIrB,EAASsB,YAAYpB,GAAS,KAAD,EACpB,KADtBe,EAAIE,EAAAI,MACDC,QAAQC,OACbhB,EAAW,IAEXA,EAAWQ,EAAKO,SACnBL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEDQ,QAAQC,IAAI,0BAAyBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,kBAErD,kBAXmB,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KAapBpB,GACJ,GAAG,CAACT,KAGA8B,EAAAA,EAAAA,KAACpC,EAAgB,CAAAqC,UACbD,EAAAA,EAAAA,KAAA,MAAAC,SACKzB,EAAQ0B,KAAI,SAACC,GAAM,OAChBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACIG,EAAAA,EAAAA,MAAA,KAAGC,UAAU,SAAQJ,SAAA,CAAC,WAASE,EAAOG,WACtCN,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOI,YAFNJ,EAAOK,GAGX,OAKzB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    margin-bottom: 1rem;\n    padding: 1rem;\n    background-color: #f5f5f5;\n    border-radius: 8px;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  p {\n    margin: 0;\n  }\n\n  p.author {\n    font-weight: bold;\n  }\n`;\n","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport MovieAPI from \"services/fetchAPI\";\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst movieAPI = new MovieAPI()\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const getReviewsById = async () => {\n            try {\n                const resp = await movieAPI.ReviewsById(movieId);\n                if (resp.results.length === 0) {\n                    setReviews([]);\n                } else {\n                    setReviews(resp.results);\n                }\n            } catch (error) {\n                console.log(\"Error searching movies:\", error);\n            }\n        };\n\n        getReviewsById();\n    }, [movieId]);\n\n    return (\n        <ReviewsContainer>\n            <ul>\n                {reviews.map((review) => (\n                    <li key={review.id}>\n                        <p className=\"author\">Author: {review.author}</p>\n                        <p>{review.content}</p>\n                    </li>\n                ))}\n            </ul>\n        </ReviewsContainer>\n    )\n}\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","movieAPI","MovieAPI","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getReviewsById","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","ReviewsById","sent","results","length","t0","console","log","stop","apply","arguments","_jsx","children","map","review","_jsxs","className","author","content","id"],"sourceRoot":""}