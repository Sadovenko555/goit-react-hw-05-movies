{"version":3,"file":"static/js/274.50bb7ac5.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/MoviesByQuery/MoviesByQuery.styled.jsx","components/MoviesByQuery/MoviesByQuery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesContainer = styled.main`\n  padding: 2rem;\n`;\n\nexport const SearchBoxContainer = styled.div`\n  margin-bottom: 1rem;\n`;\n\nexport const MoviesList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nexport const NoResultsMessage = styled.p`\n  text-align: center;\n  font-weight: bold;\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  max-width: 300px;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border-color: orange;\n    box-shadow: 0px 0px 4px rgba(255, 165, 0, 0.5);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { SearchInput } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n    return (\n        <SearchInput\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            placeholder=\"Search movies...\"\n        />\n    )\n}\n\nSearchBox.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    margin-bottom: 0.5rem;\n  }\n\n  a {\n    text-decoration: none;\n    color: #333;\n    font-weight: bold;\n\n    &:hover {\n      color: orange;\n    }\n  }\n`;\n\nexport const NoMoviesMessage = styled.p`\n  font-weight: bold;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { MoviesContainer, NoMoviesMessage } from './MoviesByQuery.styled';\n\nexport const MoviesByQuery = ({ movies }) => {\n    const location = useLocation();\n\n    if (!movies || movies.length === 0) {\n        return <NoMoviesMessage>Start searching for movies</NoMoviesMessage>;\n    }\n\n    return (\n        <MoviesContainer>\n            <ul>\n                {movies.map(({ id, title }) => (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </MoviesContainer>\n    )\n}\n\nMoviesByQuery.propTypes = {\n    movies: PropTypes.array.isRequired,\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MovieAPI from \"services/fetchAPI\";\nimport { MoviesContainer, SearchBoxContainer, MoviesList, NoResultsMessage } from './Movies.styled';\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { MoviesByQuery } from \"components/MoviesByQuery/MoviesByQuery\";\n\nconst movieAPI = new MovieAPI();\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"title\") ?? \"\";\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const searchMovies = async () => {\n            try {\n                if (movieName.trim() !== \"\") {\n                    const data = await movieAPI.movieByQuery(movieName);\n                    setMovies(data.results);\n                } else {\n                    setMovies([]);\n                }\n            } catch (error) {\n                console.log(\"Error searching movies:\", error);\n            }\n        };\n        searchMovies();\n    }, [movieName]);\n\n    const updateQueryString = (value) => {\n        const nextParams = value !== \"\" ? { title: value } : {};\n        setSearchParams(nextParams);\n    };\n\n    return (\n        <MoviesContainer>\n            <SearchBoxContainer>\n                <SearchBox value={movieName} onChange={updateQueryString} />\n            </SearchBoxContainer>\n            {movies.length > 0 ? (\n                <MoviesList>\n                    <MoviesByQuery movies={movies} />\n                </MoviesList>\n            ) : (\n                <NoResultsMessage>No movies found.</NoResultsMessage>\n            )}\n        </MoviesContainer>\n    );\n};\n\nexport default Movies;\n"],"names":["MoviesContainer","styled","_templateObject","_taggedTemplateLiteral","SearchBoxContainer","_templateObject2","MoviesList","_templateObject3","NoResultsMessage","_templateObject4","SearchInput","SearchBox","_ref","value","onChange","_jsx","type","e","target","placeholder","NoMoviesMessage","MoviesByQuery","movies","location","useLocation","length","children","map","_ref2","id","title","Link","to","concat","state","from","movieAPI","MovieAPI","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","get","_useState","useState","_useState2","setMovies","useEffect","searchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","trim","movieByQuery","sent","results","t0","console","log","stop","apply","arguments","_jsxs"],"sourceRoot":""}